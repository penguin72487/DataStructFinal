Treap<k_Bar> a, b, c;
    // treap.slip_By_Value(a, b, k_Bar(0, "TXO", 1000, 201706, 'P', 0, 0, 0, 0));
    // treap.slip_By_Value(b, c, k_Bar(0, "TXO", 1000, 201706, 'P', 0, FLT_MAX, 0, 0));
    // cout<<b.size()<<endl;
    // // a.merge(b);
    // // a.merge(c);
    // // treap= a;
    // a.clear();
    // b.clear();
    // c.clear();
    // cout<<"TXO_9500_201706_C exists?: "<<endl;
    // treap.slip_By_Value(a, b, k_Bar(0, "TXO", 9500, 201706, 'C', 0, 0, 0, 0));
    // treap.slip_By_Value(b, c, k_Bar(0, "TXO", 9500, 201706, 'C', 0, FLT_MAX, 0, 0));
    // cout<<b.size()<<endl;
    // // a.merge(b);
    // // a.merge(c);
    // // treap= a;
    // a.clear();
    // b.clear();
    // c.clear();
    // cout<<"TXO_5500_201706_C exists?: "<<endl;
    // treap.slip_By_Value(a, b, k_Bar(0, "TXO", 5500, 201706, 'C', 0, 0, 0, 0));
    // treap.slip_By_Value(b, c, k_Bar(0, "TXO", 5500, 201706, 'C', 0, FLT_MAX, 0, 0));
    // cout<<b.size()<<endl;
    // // a.merge(b);
    // // a.merge(c);
    // // treap.merge(a);
    // a.clear();
    // b.clear();
    // c.clear();
    // cout << "TXO_9900_201705_C" << endl;
    // Treap<k_Bar> TXO_9900_201705_C;
    // treap.slip_By_Value(a, TXO_9900_201705_C, k_Bar(0, "TXO", 9900, 201705, 'C', 0, 0, 0, 0));
    // treap.slip_By_Value(TXO_9900_201705_C, b, k_Bar(0, "TXO", 9900, 201705, 'C', 0, FLT_MAX, 0, 0));
    // cout<<TXO_9900_201705_C.size()<<endl;
    // Treap<k_Bar> e, f;
    // TXO_9900_201705_C.slip_By_Size(e, f, 10);
    // cout<<"Small 10"<<endl;
    // cout<<e<<endl;
    // // TXO_9900_201705_C.merge(e);
    // cout<<"Big 10"<<endl;
    // TXO_9900_201705_C.slip_By_Size(e, f, TXO_9900_201705_C.size()-10);
    // cout<<f<<endl;
    // // TXO_9900_201705_C.merge(e, f);
    // cout<<"Middle"<<endl;
    // // cout<<TXO_9900_201705_C[TXO_9900_201705_C.size()/2]<<endl;


    // cout<<treap<<endl;